"""
Django settings for church project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
import os
from os import path
# from decouple import config
import sys

import cloudinary
import cloudinary.uploader 
import cloudinary.api

# import dj_database_url
# import django_heroku


# from ..board.views import initiate_payment
# from package.board.views import *
# sys.path.append("..")


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-rp#c^&2fdu)zkuimh9gy*_@ck_&pl-$melkm6fm0bxv54*rd3#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*', '45.79.3.31']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    
    'board.apps.BoardConfig',
    'ckeditor',
    
    'cloudinary_storage',
    'cloudinary',
    
    # 'Pillow',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    "whitenoise.middleware.WhiteNoiseMiddleware",
]

ROOT_URLCONF = 'church.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'church.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {}

if DEBUG:
    
    DATABASES['default']={
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
    
else:
    pass
    # DATABASES['default'] = dj_database_url.config(conn_max_age=600, ssl_require=True)
    # DATABASES['default'] = dj_database_url.config(default=config('DATABASE_URL'))

    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': 'church',
            'USER': 'sysadmin',
            'PASSWORD': 'sysadmin',
            'HOST': 'localhost'
        }
    }


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'
# STATIC_ROOT = BASE_DIR / 'static'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = "whitenoise.storage.CompressedStaticFilesStorage"

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]


MEDIA_URL = '/media/'
DEFAULT_FILE_STORAGE = 'cloudinary_storage.storage.MediaCloudinaryStorage'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
# STATICFILES_DIRS = [
#     os.path.join(BASE_DIR, 'static'),
# ]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

# Cloudinary stuff
CLOUDINARY_URL='cloudinary://487983837526748:o-dVAOCMjsswknBjdPiPaqMOeuU@dmt7fse5k'

CLOUDINARY_STORAGE = {
    'CLOUD_NAME': 'dmt7fse5k',
    'API_KEY': '487983837526748',
    'API_SECRET': 'o-dVAOCMjsswknBjdPiPaqMOeuU',
}

SENDER_EMAIL = 'okekefrancis112@gmail.com'
SENDER_PASSWORD = 'oqbhvmxytokvhazg'
PAYSTACK_SECRET_KEY = 'sk_test_7d1a8a414b7517d3c51107b69d7d13acffc4a356'
PAYSTACK_PUBLIC_KEY = 'pk_test_82ea8b5b6fcfb5d9e861ae8ca3caa872cb13a544'

AUTH_USER_MODEL = 'board.NewUser'
SESSION_SAVE_EVERY_REQUEST = True
PAYMENT_SESSION_ID = 'payment_form'  

# CLOUD_NAME='dmt7fse5k'
# API_KEY='487983837526748'
# API_SECRET='o-dVAOCMjsswknBjdPiPaqMOeuU'
# CLOUDINARY_URL='cloudinary://487983837526748:o-dVAOCMjsswknBjdPiPaqMOeuU@dmt7fse5k'





# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

# django_heroku.settings(locals())
try:
    from .local_settings import *
except ImportError:
    pass


